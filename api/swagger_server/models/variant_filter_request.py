# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class VariantFilterRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, _in: str=None, out: str=None, filter: str=None):  # noqa: E501
        """VariantFilterRequest - a model defined in Swagger

        :param _in: The _in of this VariantFilterRequest.  # noqa: E501
        :type _in: str
        :param out: The out of this VariantFilterRequest.  # noqa: E501
        :type out: str
        :param filter: The filter of this VariantFilterRequest.  # noqa: E501
        :type filter: str
        """
        self.swagger_types = {
            '_in': str,
            'out': str,
            'filter': str
        }

        self.attribute_map = {
            '_in': 'in',
            'out': 'out',
            'filter': 'filter'
        }

        self.__in = _in
        self._out = out
        self._filter = filter

    @classmethod
    def from_dict(cls, dikt) -> 'VariantFilterRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VariantFilterRequest of this VariantFilterRequest.  # noqa: E501
        :rtype: VariantFilterRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _in(self) -> str:
        """Gets the _in of this VariantFilterRequest.


        :return: The _in of this VariantFilterRequest.
        :rtype: str
        """
        return self.__in

    @_in.setter
    def _in(self, _in: str):
        """Sets the _in of this VariantFilterRequest.


        :param _in: The _in of this VariantFilterRequest.
        :type _in: str
        """

        self.__in = _in

    @property
    def out(self) -> str:
        """Gets the out of this VariantFilterRequest.


        :return: The out of this VariantFilterRequest.
        :rtype: str
        """
        return self._out

    @out.setter
    def out(self, out: str):
        """Sets the out of this VariantFilterRequest.


        :param out: The out of this VariantFilterRequest.
        :type out: str
        """

        self._out = out

    @property
    def filter(self) -> str:
        """Gets the filter of this VariantFilterRequest.

        The name of the filter(s) to apply, seperated by comma  # noqa: E501

        :return: The filter of this VariantFilterRequest.
        :rtype: str
        """
        return self._filter

    @filter.setter
    def filter(self, filter: str):
        """Sets the filter of this VariantFilterRequest.

        The name of the filter(s) to apply, seperated by comma  # noqa: E501

        :param filter: The filter of this VariantFilterRequest.
        :type filter: str
        """

        self._filter = filter
